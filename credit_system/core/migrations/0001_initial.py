# Generated by Django 4.2.7 on 2025-07-17 16:37

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="Customer's first name", max_length=100)),
                ('last_name', models.CharField(help_text="Customer's last name", max_length=100)),
                ('age', models.IntegerField(help_text="Customer's age (must be 18 or older)", validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(100)])),
                ('phone_number', models.BigIntegerField(help_text="Customer's phone number (must be unique)", unique=True)),
                ('monthly_income', models.DecimalField(decimal_places=2, help_text="Customer's monthly income", max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('approved_limit', models.DecimalField(decimal_places=2, help_text='Approved credit limit (36 * monthly_income, rounded to nearest lakh)', max_digits=15)),
                ('current_debt', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current outstanding debt amount', max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the customer was registered')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the customer information was last updated')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(help_text='Overall credit score (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('past_loans_score', models.DecimalField(decimal_places=2, help_text='Score component for past loan performance', max_digits=5)),
                ('loan_volume_score', models.DecimalField(decimal_places=2, help_text='Score component for loan volume', max_digits=5)),
                ('current_year_score', models.DecimalField(decimal_places=2, help_text='Score component for current year activity', max_digits=5)),
                ('credit_utilization_score', models.DecimalField(decimal_places=2, help_text='Score component for credit utilization', max_digits=5)),
                ('calculated_at', models.DateTimeField(auto_now=True, help_text='When the score was last calculated')),
                ('customer', models.OneToOneField(help_text='Customer for whom the score is calculated', on_delete=django.db.models.deletion.CASCADE, related_name='credit_score', to='core.customer')),
            ],
            options={
                'verbose_name': 'Credit Score',
                'verbose_name_plural': 'Credit Scores',
                'db_table': 'credit_scores',
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the loan', unique=True)),
                ('loan_amount', models.DecimalField(decimal_places=2, help_text='Amount of the loan', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('1000.00'))])),
                ('tenure', models.IntegerField(help_text='Loan tenure in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('interest_rate', models.DecimalField(decimal_places=2, help_text='Annual interest rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('50.00'))])),
                ('monthly_repayment', models.DecimalField(decimal_places=2, help_text='Monthly installment amount', max_digits=12)),
                ('emis_paid_on_time', models.IntegerField(default=0, help_text='Number of EMIs paid on time', validators=[django.core.validators.MinValueValidator(0)])),
                ('loan_approved', models.BooleanField(default=False, help_text='Whether the loan is approved')),
                ('start_date', models.DateField(help_text='Loan start date')),
                ('end_date', models.DateField(help_text='Loan end date')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the loan was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the loan was last updated')),
                ('customer', models.ForeignKey(help_text='Customer who applied for this loan', on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='core.customer')),
            ],
            options={
                'verbose_name': 'Loan',
                'verbose_name_plural': 'Loans',
                'db_table': 'loans',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer', 'loan_approved'], name='loans_custome_a2abae_idx'), models.Index(fields=['start_date', 'end_date'], name='loans_start_d_5c9ae3_idx')],
            },
        ),
    ]
